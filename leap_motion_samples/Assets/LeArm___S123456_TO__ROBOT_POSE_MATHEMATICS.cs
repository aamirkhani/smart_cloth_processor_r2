 using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LeArm___S123456_TO__ROBOT_POSE_MATHEMATICS : MonoBehaviour {

    private LeArm__MOTORS_TO_GRIPPER_POSE LeArm;
    public bool LogMatrixHierarchy = false;

    // Update is called once per frame
    void LateUpdate() {
        if(LogMatrixHierarchy)
            LateUpdate_LOG_METRIX_HIERARCHY();
    }

    // Use this for initialization
    void Start () {
        LeArm = GetComponent<LeArm__MOTORS_TO_GRIPPER_POSE>();

        TEST___Number1___compute_XYZ_to_S123456();
    }

    
    //True Breadth-first search
    private Transform FindDeepChild(Transform aParent, string aName)
    {
        Queue<Transform> queue = new Queue<Transform>();
        
        queue.Enqueue(aParent);
        while (queue.Count > 0)
        {
            var c = queue.Dequeue();
            if (c.name == aName)
                return c;
            foreach (Transform t in c)
                queue.Enqueue(t);
        }
        return null;
    }
    


    // Update is called once per frame
    void LateUpdate_LOG_METRIX_HIERARCHY() {
        //var Gripper__RIGHT_RUBBER_TIP = GameObject.Find("Gripper__RIGHT_RUBBER_TIP");
        var Gripper__RIGHT_RUBBER_TIP = FindDeepChild(this.transform, "Gripper__RIGHT_RUBBER_TIP");

        Debug.Log("%666010 - [#" + -1 + "]  Gripper__RIGHT_RUBBER_TIP.transform.localPosition=" + Gripper__RIGHT_RUBBER_TIP.transform.localPosition
            + "    Gripper__RIGHT_RUBBER_TIP.transform.position=" + Gripper__RIGHT_RUBBER_TIP.transform.position);
       

        int i = 0;
        for(var cur = Gripper__RIGHT_RUBBER_TIP.transform; cur !=null; cur = cur.transform.parent)
        {
            var cur_localRotation = cur.localRotation;
            //cur_localRotation = OverrideRotation(cur.localRotation, cur.gameObject);

            var M = Matrix4x4.TRS(cur.localPosition, cur_localRotation, cur.localScale);
            
            var N = TRS__IMPL2(cur.localPosition, cur_localRotation, cur.localScale);

            Matrix4x4 PiT = Matrix4x4.identity;
            Matrix4x4 PiR__ = Matrix4x4.identity;
            Matrix4x4 PiS = Matrix4x4.identity;
            var P = TRS__IMPL4(cur.localPosition, cur_localRotation, cur.localScale,out PiT, out PiR__, out PiS);

            //var N = TRS__IMPL1(cur.localPosition, cur_localRotation, cur.localScale);
            //var P = TRS__IMPL3(cur.localPosition, cur_localRotation, cur.localScale);


            Matrix4x4 PiR = OverrideRotationMatrix(PiR__, cur.gameObject);

            Debug.Log("% " + cur.name);
            Debug.Log("M" + i + "=[\n" + M + "  ]");
            Debug.Log("N" + i + "=[\n" + N + "  ]");
            Debug.Log("P" + i + "T=[\n" + PiT + "  ]");
            Debug.Log("P" + i + "R=[\n" + PiR + "  ]");
            Debug.Log("P" + i + "S=[\n" + PiS + "  ]");
            Debug.Log("P" + i + "R__=[\n" + PiR__ + "  ]");

            //Debug.Log("O" + i + "=[\n" + O + "  ]");
            //Debug.Log("P" + i + "=[\n" + P + "  ]");
            i++;
        }

        Debug.Log("Servo1=" + LeArm.Servo1);
        Debug.Log("Servo2=" + LeArm.Servo2);
        Debug.Log("Servo3=" + LeArm.Servo3);
        Debug.Log("Servo4=" + LeArm.Servo4);
        Debug.Log("Servo5=" + LeArm.Servo5);
        Debug.Log("Servo6=" + LeArm.Servo6);

        Debug.Log("realServo1=" + LeArm.realServo1);
        Debug.Log("realServo2=" + LeArm.realServo2);
        Debug.Log("realServo3=" + LeArm.realServo3);
        Debug.Log("realServo4=" + LeArm.realServo4);
        Debug.Log("realServo5=" + LeArm.realServo5);
        Debug.Log("realServo6=" + LeArm.realServo6);
        Debug.Log("Gripper__RIGHT_RUBBER_TIP_localPosition=[" + Gripper__RIGHT_RUBBER_TIP.transform.localPosition + "]");
        Debug.Log("Gripper__RIGHT_RUBBER_TIP_position=[" + Gripper__RIGHT_RUBBER_TIP.transform.position + "]");
    }


    Quaternion OverrideRotation(Quaternion Qin, GameObject gameObject)
    {
        if (gameObject.name.Equals(LeArm.Servo6_Hinge.name))
        {
            Debug.Log("% <<<Servo6_Hinge>>> = " + LeArm.Servo6_Hinge.name);
            return Quaternion.Euler(0, LeArm.realServo6 * 180 - 180, 0);
        }

        if (gameObject.name.Equals(LeArm.Servo5_Hinge.name))
        {
            Debug.Log("% <<<Servo5_Hinge>>> = " + LeArm.Servo5_Hinge.name);
            return Quaternion.Euler(0, LeArm.realServo5 * 180 - 90, 0); // Y
        }

        if (gameObject.name.Equals(LeArm.Servo4_Hinge.name))
        {
            Debug.Log("% <<<Servo4_Hinge>>> = " + LeArm.Servo4_Hinge.name);
            return Quaternion.Euler(0, LeArm.realServo4 * 180 - 90, 0); // Y
        }

        if (gameObject.name.Equals(LeArm.Servo3_Hinge.name))
        {
            Debug.Log("% <<<Servo3_Hinge>>> = " + LeArm.Servo3_Hinge.name);
            return Quaternion.Euler(0, LeArm.realServo3 * 180 - 90, 0); // Y
        }




        if (gameObject.name.Equals(LeArm.Servo2_Hinge.name))
        {
            Debug.Log("% <<<Servo2_Hinge>>> = " + LeArm.Servo2_Hinge.name);
            return Quaternion.Euler(0, (1 - LeArm.Servo2) * 180 - 90, 0);
        }

        return Qin;
    }

    private Matrix4x4 OverrideRotationMatrix(Matrix4x4 PiR__, GameObject gameObject)
    {
        if (gameObject.name.Equals(LeArm.Servo6_Hinge.name))
        {
            
            Debug.Log("% <<<Servo6_Hinge>>> = " + LeArm.Servo6_Hinge.name);
            //Debug.Log("DEBUG__PiR__=+PiR");
            return ROTATE_ONLY_Y(LeArm.realServo6 * 180 - 180);
        }

        if (gameObject.name.Equals(LeArm.Servo5_Hinge.name))
        {
            Debug.Log("% <<<Servo5_Hinge>>> = " + LeArm.Servo5_Hinge.name);
            //Debug.Log("DEBUG__PiR__=+PiR");
            return ROTATE_ONLY_Y(LeArm.realServo5 * 180 - 90); // Y
        }

        if (gameObject.name.Equals(LeArm.Servo4_Hinge.name))
        {
            Debug.Log("% <<<Servo4_Hinge>>> = " + LeArm.Servo4_Hinge.name);
            //Debug.Log("DEBUG__PiR__=+PiR");
            return ROTATE_ONLY_Y(LeArm.realServo4 * 180 - 90); // Y
        }

        if (gameObject.name.Equals(LeArm.Servo3_Hinge.name))
        {
            Debug.Log("% <<<Servo3_Hinge>>> = " + LeArm.Servo3_Hinge.name);
            //Debug.Log("DEBUG__PiR__=+PiR");
            return ROTATE_ONLY_Y(LeArm.realServo3 * 180 - 90); // Y
        }




        if (gameObject.name.Equals(LeArm.Servo2_Hinge.name))
        {
            Debug.Log("% <<<Servo2_Hinge>>> = " + LeArm.Servo2_Hinge.name);
            //Debug.Log("DEBUG__PiR__=+PiR");
            return ROTATE_ONLY_Y( (1 - LeArm.Servo2) * 180 - 90);
        }

        return PiR__;
    }




    /*
    public static Matrix4x4 TRS__IMPL1(Vector3 pos, Quaternion q, Vector3 s)
    {
        Matrix4x4 result = new Matrix4x4();
        // Rotation and Scale
        // Quaternion multiplication can be used to represent rotation. 
        // If a quaternion is represented by qw + i qx + j qy + k qz , then the equivalent matrix for rotation is (including scale):
        // Remarks: https://forums.inovaestudios.com/t/math-combining-a-translation-rotation-and-scale-matrix-question-to-you-math-magicians/5194/2
        double sqw = q.w * q.w;
        double sqx = q.x * q.x;
        double sqy = q.y * q.y;
        double sqz = q.z * q.z;
        result.m00 = (float)(1 - 2 * sqy - 2 * sqz) * (float)s.x;
        result.m01 = (float)(2 * q.x * q.y - 2 * q.z * q.w);
        result.m02 = (float)(2 * q.x * q.z + 2 * q.y * q.w);
        result.m10 = (float)(2 * q.x * q.y + 2 * q.z * q.w);
        result.m11 = (float)(1 - 2 * sqx - 2 * sqz) * (float)s.y;
        result.m12 = (float)(2 * q.y * q.z - 2 * q.x * q.w);
        result.m20 = (float)(2 * q.x * q.z - 2 * q.y * q.w);
        result.m21 = (float)(2 * q.y * q.z + 2 * q.x * q.w);
        result.m22 = (float)(1 - 2 * sqx - 2 * sqy) * (float)s.z;
        // Translation
        result.m03 = (float)pos.x;
        result.m13 = (float)pos.y;
        result.m23 = (float)pos.z;
        result.m33 = 1.0f;
        // Return result
        return result;
    }
    */


    /// Creates a translation, rotation and scaling matrix.
    /// The returned matrix is such that places things at position pos, oriented in rotation q and scaled by s.
    /// </remarks>
    public static Matrix4x4 TRS__IMPL2(Vector3 pos, Quaternion q, Vector3 s)
    {
        // Translation
        Matrix4x4 translation = Matrix4x4.identity;
        Matrix4x4 rotation = Matrix4x4.identity;
        Matrix4x4 scale = Matrix4x4.identity;

        translation.m03 = (float)pos.x;
        translation.m13 = (float)pos.y;
        translation.m23 = (float)pos.z;
        translation.m33 = 1.0f;

        // Rotation
        // Quaternion multiplication can be used to represent rotation. 
        // If a quaternion is represented by qw + i qx + j qy + k qz , then the equivalent matrix for rotation is:
        // Note: Small optimization would be to calcluate multiplications only once, similar to sqw, sqx, sqy, sqz.
        float sqw = q.w * q.w;
        float sqx = q.x * q.x;
        float sqy = q.y * q.y;
        float sqz = q.z * q.z;
        rotation.m00 = (float)(1 - 2 * sqy - 2 * sqz);
        rotation.m01 = (float)(2 * q.x * q.y - 2 * q.z * q.w);
        rotation.m02 = (float)(2 * q.x * q.z + 2 * q.y * q.w);
        rotation.m10 = (float)(2 * q.x * q.y + 2 * q.z * q.w);
        rotation.m11 = (float)(1 - 2 * sqx - 2 * sqz);
        rotation.m12 = (float)(2 * q.y * q.z - 2 * q.x * q.w);
        rotation.m20 = (float)(2 * q.x * q.z - 2 * q.y * q.w);
        rotation.m21 = (float)(2 * q.y * q.z + 2 * q.x * q.w);
        rotation.m22 = (float)(1 - 2 * sqx - 2 * sqy);
        rotation.m33 = 1.0f;

        // Scale
        scale.m00 = (float)s.x;
        scale.m11 = (float)s.y;
        scale.m22 = (float)s.z;
        scale.m33 = 1.0f;

        // TODO How to merge these?
        Matrix4x4 result = new Matrix4x4();
        result = translation * rotation * scale;
        return result;
    }

    public static Matrix4x4 TRS__IMPL4(Vector3 pos, Quaternion q, Vector3 s, out Matrix4x4 M_translate, out Matrix4x4 M_rotate, out Matrix4x4 M_scale)
    {
        // Translation
        Matrix4x4 translation = Matrix4x4.identity;
        Matrix4x4 rotation = Matrix4x4.identity;
        Matrix4x4 scale = Matrix4x4.identity;

        translation.m03 = (float)pos.x;
        translation.m13 = (float)pos.y;
        translation.m23 = (float)pos.z;
        translation.m33 = 1.0f;

        // Rotation
        // Quaternion multiplication can be used to represent rotation. 
        // If a quaternion is represented by qw + i qx + j qy + k qz , then the equivalent matrix for rotation is:
        // Note: Small optimization would be to calcluate multiplications only once, similar to sqw, sqx, sqy, sqz.
        float sqw = q.w * q.w;
        float sqx = q.x * q.x;
        float sqy = q.y * q.y;
        float sqz = q.z * q.z;
        rotation.m00 = (float)(1 - 2 * sqy - 2 * sqz);
        rotation.m01 = (float)(2 * q.x * q.y - 2 * q.z * q.w);
        rotation.m02 = (float)(2 * q.x * q.z + 2 * q.y * q.w);
        rotation.m10 = (float)(2 * q.x * q.y + 2 * q.z * q.w);
        rotation.m11 = (float)(1 - 2 * sqx - 2 * sqz);
        rotation.m12 = (float)(2 * q.y * q.z - 2 * q.x * q.w);
        rotation.m20 = (float)(2 * q.x * q.z - 2 * q.y * q.w);
        rotation.m21 = (float)(2 * q.y * q.z + 2 * q.x * q.w);
        rotation.m22 = (float)(1 - 2 * sqx - 2 * sqy);
        rotation.m33 = 1.0f;

        // Scale
        scale.m00 = (float)s.x;
        scale.m11 = (float)s.y;
        scale.m22 = (float)s.z;
        scale.m33 = 1.0f;

        M_translate = translation;
        M_rotate = rotation;
        M_scale = scale;

        // TODO How to merge these?
        Matrix4x4 result = new Matrix4x4();
        result = translation * rotation * scale;
        return result;
    }

    /*
    public static Matrix4x4 TRS__IMPL3(Vector3 pos, Quaternion q, Vector3 s)
    {
        // Translation
        Matrix4x4 translation = new Matrix4x4();
        Matrix4x4 rotation = new Matrix4x4();
        Matrix4x4 scale = new Matrix4x4();

        translation.m03 = (float)pos.x;
        translation.m13 = (float)pos.y;
        translation.m23 = (float)pos.z; 
        translation.m33 = 1.0f;

        // Rotation
        // Quaternion multiplication can be used to represent rotation. 
        // If a quaternion is represented by qw + i qx + j qy + k qz , then the equivalent matrix for rotation is:
        // Note: Small optimization would be to calcluate multiplications only once, similar to sqw, sqx, sqy, sqz.
        float sqw = q.w * q.w;
        float sqx = q.x * q.x;
        float sqy = q.y * q.y;
        float sqz = q.z * q.z;
        rotation.m00 = (float)(1 - 2 * sqy - 2 * sqz);
        rotation.m01 = (float)(2 * q.x * q.y - 2 * q.z * q.w);
        rotation.m02 = (float)(2 * q.x * q.z + 2 * q.y * q.w);
        rotation.m10 = (float)(2 * q.x * q.y + 2 * q.z * q.w);
        rotation.m11 = (float)(1 - 2 * sqx - 2 * sqz);
        rotation.m12 = (float)(2 * q.y * q.z - 2 * q.x * q.w);
        rotation.m20 = (float)(2 * q.x * q.z - 2 * q.y * q.w);
        rotation.m21 = (float)(2 * q.y * q.z + 2 * q.x * q.w);
        rotation.m22 = (float)(1 - 2 * sqx - 2 * sqy);
        rotation.m33 = 1.0f;

        // Scale
        scale.m00 = (float)s.x;
        scale.m11 = (float)s.y;
        scale.m22 = (float)s.z;
        scale.m33 = 1.0f;

        // TODO How to merge these?
        Matrix4x4 result = new Matrix4x4();
        result = scale * rotation * translation;
        return result;
    }
    */


    const float degToRad = (float)(Mathf.PI / 180.0f);

    public static Quaternion Euler(float x, float y, float z)
    {
        return FromEulerRad(new Vector3((float)x, (float)y, (float)z) * degToRad);
    }

    private static Quaternion FromEulerRad(Vector3 euler)
    {
        var yaw = euler.x;
        var pitch = euler.y;
        var roll = euler.z;
        float rollOver2 = roll * 0.5f;
        float sinRollOver2 = (float)System.Math.Sin((float)rollOver2);
        float cosRollOver2 = (float)System.Math.Cos((float)rollOver2);
        float pitchOver2 = pitch * 0.5f;
        float sinPitchOver2 = (float)System.Math.Sin((float)pitchOver2);
        float cosPitchOver2 = (float)System.Math.Cos((float)pitchOver2);
        float yawOver2 = yaw * 0.5f;
        float sinYawOver2 = (float)System.Math.Sin((float)yawOver2);
        float cosYawOver2 = (float)System.Math.Cos((float)yawOver2);
        Quaternion result;
        result.x = cosYawOver2 * cosPitchOver2 * cosRollOver2 + sinYawOver2 * sinPitchOver2 * sinRollOver2;
        result.y = cosYawOver2 * cosPitchOver2 * sinRollOver2 - sinYawOver2 * sinPitchOver2 * cosRollOver2;
        result.z = cosYawOver2 * sinPitchOver2 * cosRollOver2 + sinYawOver2 * cosPitchOver2 * sinRollOver2;
        result.w = sinYawOver2 * cosPitchOver2 * cosRollOver2 - cosYawOver2 * sinPitchOver2 * sinRollOver2;
        return result;
    }


    public static Matrix4x4 ROTATE_ONLY_Y(float y)
    {
        y *= Mathf.PI / 180f;
        Matrix4x4 m = new Matrix4x4();
        
        m.m00 = Mathf.Cos(y);   m.m01 = 0;               m.m02 = Mathf.Sin(y);   m.m03 = 0;
        m.m10 = 0;              m.m11 = 1;               m.m12 = 0;              m.m13 = 0;
        m.m20 =-Mathf.Sin(y);   m.m21 = 0;               m.m22 = Mathf.Cos(y);   m.m23 = 0;
        m.m30 = 0;              m.m31 = 0;               m.m32 = 0;              m.m33 = 1;
        
        /*
        m.m00 =-Mathf.Sin(y); m.m01 = 0; m.m02 = Mathf.Cos(y); m.m03 = 0;
        m.m10 = 0; m.m11 = 1; m.m12 = 0; m.m13 = 0;
        m.m20 =-Mathf.Cos(y); m.m21 = 0; m.m22 =-Mathf.Sin(y); m.m23 = 0;
        m.m30 = 0; m.m31 = 0; m.m32 = 0; m.m33 = 1;
        */

        return m;
    }

    public static Quaternion ToQ(Vector3 v)
    {
        return ToQ(v.y, v.x, v.z);
    }

    public static Quaternion ToQ(float yaw, float pitch, float roll)
    {
        yaw *= Mathf.Deg2Rad;
        pitch *= Mathf.Deg2Rad;
        roll *= Mathf.Deg2Rad;
        float rollOver2 = roll * 0.5f;
        float sinRollOver2 = (float)Mathf.Sin(rollOver2);
        float cosRollOver2 = (float)Mathf.Cos(rollOver2);
        float pitchOver2 = pitch * 0.5f;
        float sinPitchOver2 = (float)Mathf.Sin(pitchOver2);
        float cosPitchOver2 = (float)Mathf.Cos(pitchOver2);
        float yawOver2 = yaw * 0.5f;
        float sinYawOver2 = (float)Mathf.Sin(yawOver2);
        float cosYawOver2 = (float)Mathf.Cos(yawOver2);
        Quaternion result;
        result.w = cosYawOver2 * cosPitchOver2 * cosRollOver2 + sinYawOver2 * sinPitchOver2 * sinRollOver2;
        result.x = cosYawOver2 * sinPitchOver2 * cosRollOver2 + sinYawOver2 * cosPitchOver2 * sinRollOver2;
        result.y = sinYawOver2 * cosPitchOver2 * cosRollOver2 - cosYawOver2 * sinPitchOver2 * sinRollOver2;
        result.z = cosYawOver2 * cosPitchOver2 * sinRollOver2 - sinYawOver2 * sinPitchOver2 * cosRollOver2;

        return result;
    }





    /*
     * 
     * SOLUTION FROM MATLAB
     * 
     */
    const float pi = Mathf.PI;

    float X(float S1, float S2, float S3, float S4, float S5, float S6) {
        double x= (312685806435180641473476752661d*cos((pi*(180d*S6 - 180d))/180d))/19807040628566084398385987584d - (8890801627751381219086998152623337154526331866355055481292323873792575334352074540243024406113d*sin((pi*(180d*S6 - 180d))/180d))/1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512d - (27227524857d*sin((pi*(180d*S3 - 90d))/180d)*((2772664054518427211433986480153399752413d*cos((pi*(180d*S4 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d)*sin((pi*(180d*S5 - 90d))/180d))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180d*S5 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d)*sin((pi*(180d*S4 - 90d))/180d))/396140812571321687967719751680000000000d))/562949953421312d - (6226225034305929d*sin((pi*(180d*S2 - 90d))/180d)*((50001d*sin((pi*(180d*S3 - 90d))/180d)*((2772664054518427211433986480153399752413d*cos((pi*(180d*S4 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d)*sin((pi*(180d*S5 - 90d))/180d))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180d*S5 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d)*sin((pi*(180d*S4 - 90d))/180d))/396140812571321687967719751680000000000d))/50000d - (50001d*cos((pi*(180d*S3 - 90d))/180d)*((61565333556584955014221348737d*cos((pi*(180d*S4 - 90d))/180d)*cos((pi*(180d*S5 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180d*S6 - 180d))/180d)*sin((pi*(180d*S4 - 90d))/180d)*sin((pi*(180d*S5 - 90d))/180d))/8796093022208000000000000000d))/50000d))/9007199254740992d + (27227524857d*cos((pi*(180d*S3 - 90d))/180d)*((61565333556584955014221348737d*cos((pi*(180d*S4 - 90d))/180d)*cos((pi*(180d*S5 - 90d))/180d)*cos((pi*(180d*S6 - 180d))/180d))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180d)*sin((pi*(180*S5 - 90))/180))/8796093022208000000000000000d))/562949953421312d - (29712318374182849030243821627059d*sin((pi*(180*S3 - 90))/180)*((61565333556584955014221348737d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/8796093022208000000000000000d))/1267650600228229401496703205376d + (1380572261863459862041382114577d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/3961408125713216879677197516800000d - (205963686721440847940600080156059663d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/1980704062856608439838598758400000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((61565333556584955014221348737d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/8796093022208000000000000000d))/144115188075855872d - (405011289383489930643408355436318010906256818940782471371474204420007891465495d*sin((pi*(180*S6 - 180))/180))/57896044618658097711785492504343953926634992332820282019728792003956564819968d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((2772664054518427211433986480153399752413d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/396140812571321687967719751680000000000d))/144115188075855872d))/9007199254740992d - (29712318374182849030243821627059d*cos((pi*(180*S3 - 90))/180)*((2772664054518427211433986480153399752413d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/396140812571321687967719751680000000000d))/1267650600228229401496703205376d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((61565333556584955014221348737d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/8796093022208000000000000000d))/144115188075855872d - (405011289383489930643408355436318010906256818940782471371474204420007891465495d*sin((pi*(180*S6 - 180))/180))/57896044618658097711785492504343953926634992332820282019728792003956564819968d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((2772664054518427211433986480153399752413d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/396140812571321687967719751680000000000d))/144115188075855872d))/140737488355328d + (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001d*sin((pi*(180*S3 - 90))/180)*((2772664054518427211433986480153399752413d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/396140812571321687967719751680000000000d + (2772664054518427211433986480153399752413d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/396140812571321687967719751680000000000d))/50000d - (50001d*cos((pi*(180*S3 - 90))/180)*((61565333556584955014221348737d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/8796093022208000000000000000d - (61565333556584955014221348737d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/8796093022208000000000000000d))/50000d))/140737488355328d + (33524762499578270008238606452605609d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/99035203142830421991929937920000000000d - (8523075407990353037952288285409507310553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/99035203142830421991929937920000000000d - (8523075407990353037952288285409507310553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/99035203142830421991929937920000000000d - (33524762499578270008238606452605609d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/99035203142830421991929937920000000000d + 1/10;
        return (float)x;
     }

    // d
    float Y(float S1, float S2, float S3, float S4, float S5, float S6)
    {
        double y = (148435181250341558068921001331121238517334615555d * cos((pi * (180 * S5 - 90)) / 180)) / 1427247692705959881058285969449495136382746624d + (994959340556239426850551085873602893810845d * sin((pi * (180 * S5 - 90)) / 180)) / 2854495385411919762116571938898990272765493248d + (29712318374182849030243821627059d * cos((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 1267650600228229401496703205376d + (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 562949953421312d - (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 144115188075855872d - (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 144115188075855872d)) / 9007199254740992d + (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 562949953421312d - (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 144115188075855872d - (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 144115188075855872d)) / 140737488355328d - (29712318374182849030243821627059d * sin((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 1267650600228229401496703205376d - (8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 50000 + (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 50000)) / 140737488355328d + (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((399644129535681015090048641805328037774781757269861d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d - (399644129535681015090048641805328037774781757269861d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 57089907708238395242331438777979805455309864960000d)) / 50000 + (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((8873856931458887096558129901846485131689d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 1267650600228229401496703205376000000000d + (8873856931458887096558129901846485131689d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 1267650600228229401496703205376000000000d)) / 50000)) / 9007199254740992d + (1228492520340652136902747462602919682281896774933441d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180)) / 14272476927059598810582859694494951363827466240000d + (4832166560243966994561969581567571530992243473d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 14272476927059598810582859694494951363827466240000d + (4832166560243966994561969581567571530992243473d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 14272476927059598810582859694494951363827466240000d - (1228492520340652136902747462602919682281896774933441d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 14272476927059598810582859694494951363827466240000d + 28376311342246704361685311280903d / 316912650057057350374175801344d;
        return (float)y;
    }

    float Z(float S1, float S2, float S3, float S4, float S5, float S6)
    {
        double z = (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 50000)) / 9007199254740992d - (156343001260163625721213489707d * sin((pi * (180 * S6 - 180)) / 180)) / 9903520314283042199192993792d - (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((202505771682955348126786259392363192475610469339538050416614968253365904017065d * cos((pi * (180 * S6 - 180)) / 180)) / 28948022309329048855892746252171976963317496166410141009864396001978282409984d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 144115188075855872d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 144115188075855872d)) / 9007199254740992d - (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((202505771682955348126786259392363192475610469339538050416614968253365904017065d * cos((pi * (180 * S6 - 180)) / 180)) / 28948022309329048855892746252171976963317496166410141009864396001978282409984d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 144115188075855872d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 144115188075855872d)) / 140737488355328d - (8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 50000)) / 140737488355328d - (4445403601584797929026524267831049273784891915990985378012416884974887502383425959070688062431d * cos((pi * (180 * S6 - 180)) / 180)) / 521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256d + (29712318374182849030243821627059d * cos((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 1267650600228229401496703205376d + (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((1386332896627484312850176420814023250531d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d + (1386332896627484312850176420814023250531d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 198070406285660843983859875840000000000d)) / 562949953421312d - (690286563809891973963855415599d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 1980704062856608439838598758400000d + (102981907940594015826948213524431281d * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 990352031428304219919299379200000d - (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 562949953421312d + (29712318374182849030243821627059d * sin((pi * (180 * S3 - 90)) / 180) * ((30782686082090744150086179519d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d - (30782686082090744150086179519d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 4398046511104000000000000000d)) / 1267650600228229401496703205376d - (16762391761471844140639163047653783d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 49517601571415210995964968960000000000d + (4261540376403799725953923461573668676711d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 49517601571415210995964968960000000000d + (4261540376403799725953923461573668676711d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 49517601571415210995964968960000000000d + (16762391761471844140639163047653783d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 49517601571415210995964968960000000000d - 871 / 10;
        return (float)z;
    }

    void XYZ(float S1, float S2, float S3, float S4, float S5, float S6, out Vector3 XYZ)
    {
        XYZ.x = X(S1, S2, S3, S4, S5, S6);
        XYZ.y = Y(S1, S2, S3, S4, S5, S6);
        XYZ.z = Z(S1, S2, S3, S4, S5, S6);
    }

    float J(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6)
    {
      //double J =  ((3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d - Y1 + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d)^2/3 + (X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10)^2/3 + (Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10)^2/3;
        double J =  POW(((3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d - Y1 + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d),(2d/3d)) + POW((X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10),(2d/3d)) + POW((Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10),(2d/3d));
        return (float)J;
    }
    
    float dJ_dS2(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6 )
    {
        double dJ_dS2 =  (2*(- (8183844696941d*pi*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*pi*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d + (6226225034305929d*pi*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*pi*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d)*(X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10))/3 + (2*((8183844696941d*pi*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d - (6226225034305929d*pi*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (6226225034305929d*pi*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (8183844696941d*pi*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d)*(- Y1 + (3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d))/3 + (2*((6226225034305929d*pi*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (8183844696941d*pi*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d + (8183844696941d*pi*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6226225034305929d*pi*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d)*(Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10))/3;
        return (float) dJ_dS2;
    }

    float dJ_dS3(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6 )
    {
        double dJ_dS3 =  (2*((6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d + (6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d + (6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*pi*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000 - (50001*pi*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000))/140737488355328d - (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*pi*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000 - (50001*pi*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000))/9007199254740992d - (6597459994802179d*pi*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (27227524857d*pi*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (27227524857d*pi*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d - (6597459994802179d*pi*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d)*(- Y1 + (3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d))/3 + (2*((6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*pi*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 + (50001*pi*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*pi*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 + (50001*pi*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d + (27227524857d*pi*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (6597459994802179d*pi*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (6597459994802179d*pi*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d + (27227524857d*pi*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d)*(X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10))/3 + (2*((6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d - (6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*pi*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d - (6106343704810807d*pi*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d + (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*pi*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 + (50001*pi*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*pi*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 + (50001*pi*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d - (6597459994802179d*pi*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d - (27227524857d*pi*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (27227524857d*pi*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (6597459994802179d*pi*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d)*(Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10))/3;
        return (float) dJ_dS3;
    }

    float dJ_dS4(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6 )
    {
        double dJ_dS4 =  (2*(- (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/144115188075855872d))/140737488355328d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/562949953421312d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/562949953421312d + (3525061368408553d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/40960000000000d + (3634762033410333d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d + (3634762033410333d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/10737418240000000000d - (3525061368408553d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d)*(X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10))/3 - (2*(- (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d - (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d))/9007199254740992d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d - (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d))/140737488355328d + (705012715794631d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d + (3634764312768179d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + (3634764312768179d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d)*(Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10))/3 - (2*((6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/50000 + (50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/50000 + (50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/50000))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/281474976710656d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (3696860205280949d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/42949672960000d + (7623814573785517d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d - (7623814573785517d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/22517998136852480000d)*(- Y1 + (3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d))/3;
        return (float) dJ_dS4;
    }

    float dJ_dS5(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6 )
    {
        double dJ_dS5 =  - (2*((6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/50000 + (50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/50000 + (50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/50000))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d - (7340282412272093d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/1048576000000000d))/281474976710656d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/281474976710656d - (6429774037395833d*pi*cos((pi*(180*S5 - 90))/180))/18446744073709551616d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d + (4810541226070871d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/687194767360000d))/562949953421312d + (3659209732743419d*pi*sin((pi*(180*S5 - 90))/180))/35184372088832d + (3696860205280949d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (3696860205280949d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/42949672960000d + (7623814573785517d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d - (7623814573785517d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/22517998136852480000d)*(- Y1 + (3659209732743419d*cos((pi*(180*S5 - 90))/180))/35184372088832d + (6429774037395833d*sin((pi*(180*S5 - 90))/180))/18446744073709551616d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/281474976710656d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/562949953421312d + (3696860205280949d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/42949672960000d + (7623814573785517d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/22517998136852480000d + (7623814573785517d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/22517998136852480000d - (3696860205280949d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/42949672960000d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/9007199254740992d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/562949953421312d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((7340282412272093d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/1048576000000000d + (7340282412272093d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180))/1048576000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4810541226070871d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180))/687194767360000d - (4810541226070871d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/687194767360000d))/144115188075855872d))/140737488355328d + 3150403420609427d/35184372088832d))/3 - (2*(- (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d - (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d))/9007199254740992d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d - (4586990778538943d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d - (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d + (3499586237250099d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d))/140737488355328d + (5582660415794713d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (1226195258769799d*pi*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d + (705012715794631d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d + (3634764312768179d*pi*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + (3634764312768179d*pi*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*pi*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d)*(Z1 + (2399453424919389d*cos((pi*(180*S6 - 180))/180))/281474976710656d + (2221767676646829d*sin((pi*(180*S6 - 180))/180))/140737488355328d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/562949953421312d - (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((7876228193988071d*cos((pi*(180*S6 - 180))/180))/1125899906842624d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/144115188075855872d + (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/144115188075855872d))/140737488355328d - (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/281474976710656d - (27227524857d*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/562949953421312d + (1226195258769799d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/3518437208883200000d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/140737488355328d - (5582660415794713d*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/53687091200000d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*cos((pi*(180*S3 - 90))/180)*((3499586237250099d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d - (3499586237250099d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/500000000000000d))/50000 - (50001*sin((pi*(180*S3 - 90))/180)*((4586990778538943d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d + (4586990778538943d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/655360000000000d))/50000))/9007199254740992d + (3634764312768179d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d - (705012715794631d*cos((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (705012715794631d*cos((pi*(180*S5 - 90))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S6 - 180))/180))/8192000000000d - (3634764312768179d*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180)*sin((pi*(180*S6 - 180))/180))/10737418240000000000d + 871/10))/3 + (2*(- (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/281474976710656d + (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/144115188075855872d))/9007199254740992d + (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/144115188075855872d - (6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/144115188075855872d))/140737488355328d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/50000))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/50000 + (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/50000))/9007199254740992d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/163840000000000d - (1146746975510157d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d))/562949953421312d + (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d + (1749792021331159d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/250000000000000d))/562949953421312d + (4904777959294861d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/14073748835532800000d + (22330627659651d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/214748364800d + (3525061368408553d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/40960000000000d + (3634762033410333d*pi*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d + (3634762033410333d*pi*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/10737418240000000000d - (3525061368408553d*pi*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d)*(X1 - (138860392711129d*cos((pi*(180*S6 - 180))/180))/8796093022208d + (4798903840448061d*sin((pi*(180*S6 - 180))/180))/562949953421312d + (6597459994802179d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/281474976710656d + (27227524857d*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/562949953421312d - (27227524857d*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/562949953421312d + (6597459994802179d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/281474976710656d - (6226225034305929d*cos((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/9007199254740992d - (8183844696941d*cos((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/140737488355328d - (8183844696941d*sin((pi*(180*S2 - 90))/180)*((6106343704810807d*cos((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/144115188075855872d - (1969055813702889d*sin((pi*(180*S6 - 180))/180))/281474976710656d + (6106343704810807d*sin((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/144115188075855872d))/140737488355328d + (6226225034305929d*sin((pi*(180*S2 - 90))/180)*((50001*sin((pi*(180*S3 - 90))/180)*((1146746975510157d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/163840000000000d + (1146746975510157d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/163840000000000d))/50000 - (50001*cos((pi*(180*S3 - 90))/180)*((1749792021331159d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/250000000000000d - (1749792021331159d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/250000000000000d))/50000))/9007199254740992d - (4904777959294861d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/14073748835532800000d + (22330627659651d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/214748364800d - (3634762033410333d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180))/10737418240000000000d + (3525061368408553d*cos((pi*(180*S4 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S5 - 90))/180))/40960000000000d + (3525061368408553d*cos((pi*(180*S5 - 90))/180)*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180))/40960000000000d + (3634762033410333d*cos((pi*(180*S6 - 180))/180)*sin((pi*(180*S4 - 90))/180)*sin((pi*(180*S5 - 90))/180))/10737418240000000000d - 1/10))/3;
        return (float) dJ_dS5;
    }

    float dJ_dS6(float X1, float Y1, float Z1, float S1, float S2, float S3, float S4, float S5, float S6 )
    {
        double dJ_dS6 = (2 * ((8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 50000)) / 140737488355328d - (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 562949953421312d + (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 562949953421312d - (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 50000)) / 9007199254740992d - (6597459994802179d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 281474976710656d + (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 144115188075855872d + (1969055813702889d * pi * cos((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 144115188075855872d)) / 9007199254740992d + (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 250000000000000d)) / 144115188075855872d + (1969055813702889d * pi * cos((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 144115188075855872d)) / 140737488355328d + (4798903840448061d * pi * cos((pi * (180 * S6 - 180)) / 180)) / 562949953421312d + (138860392711129d * pi * sin((pi * (180 * S6 - 180)) / 180)) / 8796093022208d - (6597459994802179d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d + (1146746975510157d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 163840000000000d)) / 281474976710656d + (4904777959294861d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 14073748835532800000d - (22330627659651d * pi * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 214748364800d + (3634762033410333d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d - (3525061368408553d * pi * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 40960000000000d - (3525061368408553d * pi * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 40960000000000d - (3634762033410333d * pi * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d) * (X1 - (138860392711129d * cos((pi * (180 * S6 - 180)) / 180)) / 8796093022208d + (4798903840448061d * sin((pi * (180 * S6 - 180)) / 180)) / 562949953421312d + (6597459994802179d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 281474976710656d + (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 562949953421312d - (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 562949953421312d + (6597459994802179d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 281474976710656d - (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 144115188075855872d - (1969055813702889d * sin((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 144115188075855872d)) / 9007199254740992d - (8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 50000)) / 140737488355328d - (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 144115188075855872d - (1969055813702889d * sin((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 144115188075855872d)) / 140737488355328d + (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((1146746975510157d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 163840000000000d + (1146746975510157d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 163840000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((1749792021331159d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 250000000000000d - (1749792021331159d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 250000000000000d)) / 50000)) / 9007199254740992d - (4904777959294861d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 14073748835532800000d + (22330627659651d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 214748364800d - (3634762033410333d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d + (3525061368408553d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 40960000000000d + (3525061368408553d * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 40960000000000d + (3634762033410333d * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 10737418240000000000d - 1 / 10)) / 3 - (2 * ((6597459994802179d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 281474976710656d + (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 562949953421312d - (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 562949953421312d - (8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 50000)) / 140737488355328d + (6597459994802179d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 281474976710656d - (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 144115188075855872d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 144115188075855872d - (7876228193988071d * pi * sin((pi * (180 * S6 - 180)) / 180)) / 1125899906842624d)) / 9007199254740992d + (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 50000 - (50001 * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 50000)) / 9007199254740992d - (2221767676646829d * pi * cos((pi * (180 * S6 - 180)) / 180)) / 140737488355328d - (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 655360000000000d + (4586990778538943d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 655360000000000d)) / 144115188075855872d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 500000000000000d)) / 144115188075855872d - (7876228193988071d * pi * sin((pi * (180 * S6 - 180)) / 180)) / 1125899906842624d)) / 140737488355328d + (2399453424919389d * pi * sin((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (5582660415794713d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 53687091200000d - (1226195258769799d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 3518437208883200000d - (3634764312768179d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d + (705012715794631d * pi * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 8192000000000d + (705012715794631d * pi * cos((pi * (180 * S5 - 90)) / 180) * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180)) / 8192000000000d + (3634764312768179d * pi * cos((pi * (180 * S6 - 180)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180)) / 10737418240000000000d) * (Z1 + (2399453424919389d * cos((pi * (180 * S6 - 180)) / 180)) / 281474976710656d + (2221767676646829d * sin((pi * (180 * S6 - 180)) / 180)) / 140737488355328d + (27227524857d * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 562949953421312d - (6597459994802179d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 281474976710656d + (6226225034305929d * cos((pi * (180 * S2 - 90)) / 180) * ((7876228193988071d * cos((pi * (180 * S6 - 180)) / 180)) / 1125899906842624d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 144115188075855872d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 144115188075855872d)) / 9007199254740992d + (8183844696941d * sin((pi * (180 * S2 - 90)) / 180) * ((7876228193988071d * cos((pi * (180 * S6 - 180)) / 180)) / 1125899906842624d + (6106343704810807d * sin((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 144115188075855872d + (6106343704810807d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 144115188075855872d)) / 140737488355328d - (6597459994802179d * cos((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 281474976710656d - (27227524857d * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 562949953421312d + (1226195258769799d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 3518437208883200000d - (8183844696941d * cos((pi * (180 * S2 - 90)) / 180) * ((50001 * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 50000 - (50001 * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 50000)) / 140737488355328d - (5582660415794713d * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 53687091200000d + (6226225034305929d * sin((pi * (180 * S2 - 90)) / 180) * ((50001 * cos((pi * (180 * S3 - 90)) / 180) * ((3499586237250099d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d - (3499586237250099d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 500000000000000d)) / 50000 - (50001 * sin((pi * (180 * S3 - 90)) / 180) * ((4586990778538943d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d + (4586990778538943d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 655360000000000d)) / 50000)) / 9007199254740992d + (3634764312768179d * cos((pi * (180 * S4 - 90)) / 180) * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d - (705012715794631d * cos((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 8192000000000d - (705012715794631d * cos((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 8192000000000d - (3634764312768179d * sin((pi * (180 * S4 - 90)) / 180) * sin((pi * (180 * S5 - 90)) / 180) * sin((pi * (180 * S6 - 180)) / 180)) / 10737418240000000000d + 871 / 10)) / 3;
        return (float) dJ_dS6;
    }



    public void TEST___Number1___compute_XYZ_to_S123456()
    {
        //INPUT:
        var INPUT_XYZ=new Vector3(-194.3f, 291.2f, -182.1f);
        var X1=INPUT_XYZ.x;
        var Y1=INPUT_XYZ.y;
        var Z1=INPUT_XYZ.z;
        var S1=1f;
        var S2=0f;
    
        //OUTPUT EXPECTED:
        //    S1=1
        //    S2=0
        //    S3=0.369
        //    S4=0.934
        //    S5=0.521
        //    S6=0.875
    
        //DEFAULT INITIALIZERS
            S1=1f;
            S2=0f;
        var S3=0.5f;
        var S4=0.5f;
        var S5=0.5f;
        var S6=0.5f;

        float out_S1,out_S2,out_S3,out_S4,out_S5,out_S6;
        Vector3 OUTPUT_XYZ = Vector3.zero;

        compute_XYZ_to_S123456(INPUT_XYZ, 
                                       S1,  S2,  S3,  S4,  S5,  S6, 
                                       out OUTPUT_XYZ,
                                       out  out_S1, out  out_S2, out  out_S3, out  out_S4, out  out_S5, out  out_S6);


    }

    public void compute_XYZ_to_S123456(Vector3 INPUT_XYZ, 
                                       float in_S1, float in_S2, float in_S3, float in_S4, float in_S5, float in_S6, 
                                       out Vector3 OUTPUT_XYZ,
                                       out float out_S1, out float out_S2, out float out_S3, out float out_S4, out float out_S5, out float out_S6)
    {
        var X1=INPUT_XYZ.x;
        var Y1=INPUT_XYZ.y;
        var Z1=INPUT_XYZ.z;

        var S1 = in_S1;
        var S2 = in_S2;
        var S3 = in_S3;
        var S4 = in_S4;
        var S5 = in_S5;
        var S6 = in_S6;

        const float alpha = 0.000001f;
        float alpha3 = alpha/1f;
        float alpha4 = alpha/1f;
        float alpha5 = alpha/1f;
        float alpha6 = alpha/1f;

        for(int i=0;i<50;i++) {
            float cost = J(X1,Y1,Z1,S1,S2,S3,S4,S5,S6);
            float S3_ = S3 - alpha3 * dJ_dS3(X1,Y1,Z1,S1,S2,S3,S4,S5,S6);
            float S4_ = S4 - alpha4 * dJ_dS4(X1,Y1,Z1,S1,S2,S3,S4,S5,S6);
            float S5_ = S5 - alpha5 * dJ_dS5(X1,Y1,Z1,S1,S2,S3,S4,S5,S6);
            float S6_ = S6 - alpha6 * dJ_dS6(X1,Y1,Z1,S1,S2,S3,S4,S5,S6);

            S3=S3_;
            S4=S4_;
            S5=S5_;
            S6=S6_;

            var enable_checks=true;
            if(enable_checks) {
                if(S3<0) S3=0;
                if(S3>1) S3=1;
                if(S4<0) S4=0;
                if(S4>1) S4=1;
                if(S5<0) S5=0;
                if(S5>1) S5=1;
                if(S6<0) S6=0;
                if(S6>1) S6=1;
            }
        }

       
        XYZ(S1, S2, S3, S4, S5, S6, out OUTPUT_XYZ);
        out_S1 = S1;
        out_S2 = S2;
        out_S3 = S3;
        out_S4 = S4;
        out_S5 = S5;
        out_S6 = S6;

        Debug.Log("OUTPUT_XYZ=" + OUTPUT_XYZ);
        Debug.Log(" INPUT_XYZ=" +  INPUT_XYZ);
        Debug.Log("OUTPUT S123456=" +out_S1 + " " +out_S2 + " " +out_S3 + " " +out_S4 + " " +out_S5 + " " +out_S6 );
        Debug.Log(" INPUT S123456=" + in_S1 + " " + in_S2 + " " + in_S3 + " " + in_S4 + " " + in_S5 + " " + in_S6 );
    }


    private double POW(double a, double b) {
        return Math.Pow(a,b);
    }
    private double sin(double v) {
        return Math.Sin(v);
    }
    private double cos(double v)
    {
        return Math.Cos(v);
    }


    


}
